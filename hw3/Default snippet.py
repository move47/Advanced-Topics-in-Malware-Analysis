import idautils
import idc
import idaapi

FUNCTION_NAME = 'grrencat_start' #Change this to whatever func you want to look for. May have to change to _start in some cases or code your own logic

print ("Start of the functions")
cursor = 0
real_names = []
addresses = []
names = idautils.Names()
# Populate the two above lists with their respective data from the list of tuples returned by idautils.Names()
for n in names:
    real_names.append(n[1]) # real_names[30] ------> addresses[30]
    addresses.append(n[0])
# search for a 'start' name in the names list and if it is there, set cursor to the address of beginning of it
for rn in real_names:
    if rn == FUNCTION_NAME:
        cursor = addresses[int(real_names.index(FUNCTION_NAME))]
        break
if cursor: #if a start was found, assign it to the cursor and then 
    myFunc = idaapi.get_func(cursor)
    while cursor < myFunc.end_ea:
        print(idc.GetDisasm(cursor))
        if idc.print_insn_mnem(cursor) == 'jmp' and idc.print_insn_mnem(idc.prev_head(cursor)) == 'call':
            idc.set_cmt(cursor, 'This is a Jump after call!',0)
        cursor = idc.next_head(cursor,myFunc.end_ea) # MaxEA()
print ("===StartFinder end. Thanks for using===")

