
SOURCES=hello.cpp

PLUGINNAME=helloplugin
TARGET32=$(PLUGINNAME).so
TARGET64=$(PLUGINNAME)64.so

# Be careful messing with anything below here!

CXX=g++
LD=g++

# Definitions used by IDA
IDADEFS=-D__IDP__ -D__PLUGIN__ -D__LINUX__ -DNO_OBSOLETE_FUNCS -D__X64__

BUILD64SWITCH=-D__EA64__

IDA32LIB=-L$(IDASDK)/lib/x64_linux_gcc_32/ -lida
IDA64LIB=-L$(IDASDK)/lib/x64_linux_gcc_64/ -lida64

####################################################################
# Compiler options

COPTS=-m64 -fpic -fvisibility=hidden -fvisibility-inlines-hidden	\
      --shared -fno-diagnostics-show-caret -fdiagnostics-show-option	\
      -fwrapv -fPIC -pipe -fno-strict-aliasing -pthread -fno-rtti -std=c++11

WARNINGS=-Wall -Wextra -Wno-sign-compare -Wno-parentheses -Wshadow -Wunused	\
         -Wformat=2 -Werror=format-security -Werror=format-nonliteral		\
         -Wno-missing-field-initializers -Wno-unused-local-typedefs

# Add more include paths here if needed
INCFLAGS=-I$(IDASDK)/include

# Build an initial set of compiler flags
CFLAGS=$(IDADEFS) $(COPTS) $(WARNINGS) $(INCFLAGS)

# Check if this is a production build (i.e., NDEBUG is defined)
ifdef NDEBUG
NDEBUGFLAGS=-O2 -ffunction-sections -fdata-sections -DNDEBUG -fomit-frame-pointer -g -D_FORTIFY_SOURCE=2
CFLAGS+=$(NDEBUGFLAGS)
else
DEBUGFLAGS=-g -D_DEBUG
CFLAGS+=$(DEBUGFLAGS)
endif

####################################################################
# Initial Linker flags

LIBS=-lrt -lpthread -lc # do not list lida[64], we do that later

IDAVERSIONSCRIPT=./plugin.script

LOPTS=-m64 -fvisibility=hidden -fvisibility-inlines-hidden --shared	\
      -Wl,--gc-sections,--warn-shared-textrel	\
      -Wl,--no-undefined -Wl,--build-id	
#      -Wl,--version-script=$(IDAVERSIONSCRIPT)

# since linking with g++, give the CFLAGS again for good measure
LDFLAGS=$(CFLAGS) $(LOPTS) $(LIBS)


####################################################################
# Build helper defs

# Stash the object files in different 32 and 64 directories
BUILDDIR32=obj32
BUILDDIR64=obj64

# Build the list of 32 and 64 objects
OBJECTS32=$(SOURCES:%.cpp=$(BUILDDIR32)/%.o)
OBJECTS64=$(SOURCES:%.cpp=$(BUILDDIR64)/%.o)


####################################################################
# Now the build rules. Modify these if you need.
#####

all: $(TARGET32) $(TARGET64)

print-%  : ; @echo $* = $($*)

$(IDAVERSIONSCRIPT):
#	cp $(IDASDK)/plugins/plugin.script $(IDAVERSIONSCRIPT)

# 32 build rules
$(BUILDDIR32):
	mkdir -p $(BUILDDIR32)

$(BUILDDIR32)/%.o: %.cpp $(BUILDDIR32)
	$(CXX) $(CFLAGS) -c -o $@ $<

$(TARGET32): $(IDAVERSIONSCRIPT) $(OBJECTS32)
	$(LD) $(LDFLAGS) $(IDA32LIB) $(OBJECTS32) -o $(TARGET32)

# 64 build rules
$(BUILDDIR64):
	mkdir -p $(BUILDDIR64)

$(BUILDDIR64)/%.o: %.cpp $(BUILDDIR64)
	$(CXX) $(BUILD64SWITCH) $(CFLAGS) -c -o $@ $<

$(TARGET64): $(IDAVERSIONSCRIPT) $(OBJECTS64)
	$(LD) $(BUILD64SWITCH) $(LDFLAGS) $(IDA64LIB) $(OBJECTS64) -o $(TARGET64)

clean:
	rm -rf plugin.script
	rm -rf $(BUILDDIR32)
	rm -rf $(TARGET32)
	rm -rf $(BUILDDIR64)
	rm -rf $(TARGET64)
